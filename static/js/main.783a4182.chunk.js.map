{"version":3,"sources":["Cryptocurrency.js","Tickers.js","App.js","reportWebVitals.js","index.js"],"names":["Cryptocurrency","this","props","data","id","name","symbol","price_usd","percent_change_1h","percent_change_24h","percent_change_7d","ClassName","className","toFixed","React","Component","Tickers","state","fetchCryptocurrencyData","interval","setInterval","axios","get","then","response","wanted","result","filter","currency","includes","setState","catch","err","console","log","tickers","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUA+BeA,E,4JA3BX,WAAS,IAAD,EASJC,KAAKC,MAAMC,KAPXC,EAFI,EAEJA,GACAC,EAHI,EAGJA,KACAC,EAJI,EAIJA,OACAC,EALI,EAKJA,UACAC,EANI,EAMJA,kBACAC,EAPI,EAOJA,mBACAC,EARI,EAQJA,kBAEJ,OACI,qBAAIC,UAAW,iBAAmBP,EAAlC,UACI,oBAAGQ,UAAU,sBAAb,UAAoCP,EAApC,IAA2CC,EAA3C,OACA,sCAASC,GAAWM,QAAQ,MAC5B,8BAAIL,EAAJ,WACA,8BAAIC,EAAJ,YACA,8BAAIC,EAAJ,iB,GAjBiBI,IAAMC,W,kBCkEpBC,E,kDA/DX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IACDe,MAAQ,CACTd,KAAM,CACF,CACIC,GAAI,UACJC,KAAM,UACNC,OAAQ,MACRC,UAAW,IACXC,kBAAmB,IACnBC,mBAAoB,IACpBC,kBAAmB,KAEvB,CACIN,GAAI,WACJC,KAAM,WACNC,OAAQ,MACRC,UAAW,IACXC,kBAAmB,IACnBC,mBAAoB,IACpBC,kBAAmB,KAEvB,CACIN,GAAI,WACJC,KAAM,WACNC,OAAQ,MACRC,UAAW,IACXC,kBAAmB,IACnBC,mBAAoB,IACpBC,kBAAmB,OA7BhB,E,qDAmCnB,WAAqB,IAAD,OAChBT,KAAKiB,0BACLjB,KAAKkB,SAAWC,aAAY,kBAAM,EAAKF,4BAA2B,O,qCAGtE,WAA2B,IAAD,OACtBG,IAAMC,IAAI,4CACLC,MAAK,SAAAC,GACF,IAAIC,EAAS,CAAC,UAAW,WAAY,YACjCC,EAASF,EAASrB,KAAKwB,QAAO,SAAAC,GAAQ,OAAIH,EAAOI,SAASD,EAASxB,OACvE,EAAK0B,SAAS,CAAE3B,KAAMuB,OAEzBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAGlC,WACI,IAAIG,EAAUlC,KAAKgB,MAAMd,KAAKiC,KAAI,SAACR,GAAD,OAC9B,cAAC,EAAD,CAAgBzB,KAAMyB,GAAeA,EAASxB,OAElD,OACI,sBAAKQ,UAAU,oBAAf,UACI,oBAAIA,UAAU,UAAd,SAAyBuB,IACzB,sG,GA1DMrB,IAAMC,WCSbsB,MAXf,WACE,OACE,sBAAKzB,UAAU,MAAf,UACC,qBAAKA,UAAU,aAAf,SACE,yDAEF,cAAC,EAAD,QCGU0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.783a4182.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cryptocurrency.css';\r\n\r\nclass Cryptocurrency extends React.Component{\r\n    render(){\r\n    var {\r\n        id,\r\n        name,\r\n        symbol,\r\n        price_usd,\r\n        percent_change_1h,\r\n        percent_change_24h,\r\n        percent_change_7d,\r\n    } = this.props.data;\r\n    return (\r\n        <li ClassName={\"cryptocurrency\" + id}>\r\n            <p className=\"cryptocurrency-name\">{name}({symbol})</p>\r\n            <h1>$ {(+price_usd).toFixed(2)}</h1>\r\n            <p>{percent_change_1h}% 1hr</p>\r\n            <p>{percent_change_24h}% 24hr</p>\r\n            <p>{percent_change_7d}% 7d</p>\r\n        \r\n        </li>\r\n    )\r\n    \r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Cryptocurrency;\r\n","import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport './Tickers.css'\r\nimport Cryptocurrency from './Cryptocurrency.js';\r\nimport axios from 'axios';\r\nclass Tickers extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {\r\n                    id: \"bitcoin\",\r\n                    name: \"Bitcoin\",\r\n                    symbol: \"BTC\",\r\n                    price_usd: \"1\",\r\n                    percent_change_1h: \"0\",\r\n                    percent_change_24h: \"0\",\r\n                    percent_change_7d: \"0\",\r\n                },\r\n                {\r\n                    id: \"ethereum\",\r\n                    name: \"Ethereum\",\r\n                    symbol: \"ETH\",\r\n                    price_usd: \"1\",\r\n                    percent_change_1h: \"0\",\r\n                    percent_change_24h: \"0\",\r\n                    percent_change_7d: \"0\",\r\n                },\r\n                {\r\n                    id: \"litecoin\",\r\n                    name: \"Litecoin\",\r\n                    symbol: \"LTC\",\r\n                    price_usd: \"1\",\r\n                    percent_change_1h: \"0\",\r\n                    percent_change_24h: \"0\",\r\n                    percent_change_7d: \"0\",\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCryptocurrencyData();\r\n        this.interval = setInterval(() => this.fetchCryptocurrencyData(), 60 * 1000);\r\n    }\r\n\r\n    fetchCryptocurrencyData() {\r\n        axios.get(\"https://api.coinmarketcap.com/v1/ticker/\")\r\n            .then(response => {\r\n                var wanted = [\"bitcoin\", \"ethereum\", \"litecoin\"];\r\n                var result = response.data.filter(currency => wanted.includes(currency.id));\r\n                this.setState({ data: result});\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        var tickers = this.state.data.map((currency) =>\r\n            <Cryptocurrency data={currency} key={currency.id} />\r\n        );\r\n        return (\r\n            <div className=\"tickers-container\">\r\n                <ul className=\"tickers\">{tickers}</ul>\r\n                <p>Information updated every minute courtesy of coinmarketcap.com</p>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickers;","import React from 'react';\nimport './App.css';\nimport Tickers from './Tickers';\nfunction App() {\n  return (\n    <div className=\"App\">\n     <div className=\"App-header\">\n       <h2>Cryptocurrency Ticker</h2>\n     </div>\n     <Tickers/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}